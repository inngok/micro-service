services:
  # Infrastructure
  redis:
    image: redis:7
    command: ["redis-server","--appendonly","yes"]
    ports: ["6379:6379"]
    networks:
      - microservice-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: ["2181:2181"]
    networks:
      - microservice-net

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [ zookeeper ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports: ["9092:9092"]
    networks:
      - microservice-net

  # Microservices
  discovery-server:
    build:
      context: ./discovery-server/discovery-server
      dockerfile: Dockerfile
    ports: ["8761:8761"]
    networks:
      - microservice-net

  api-gateway:
    build:
      context: ./api-gateway/api-gateway
      dockerfile: Dockerfile
    ports: ["8080:8080"]
    depends_on:
      - discovery-server
    networks:
      - microservice-net

  order-service:
    build:
      context: ./order-service/order-service
      dockerfile: Dockerfile
    ports: ["8082:8082"]
    depends_on:
      - redis
      - kafka
      - discovery-server
    networks:
      - microservice-net

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - microservice-net
    depends_on:
      - order-service

networks:
  microservice-net:
    driver: bridge